{"version":3,"file":"static/js/247.61616b47.chunk.js","mappings":"oVAEMA,EAAM,mCACNC,EAAc,+BACdC,EAAS,UAAMD,EAAN,wBACTE,EAAS,UAAMF,EAAN,iBACTG,EAAK,UAAMH,EAAN,WACLI,EAAe,kCAGd,SAAeC,IAAtB,+B,aAAO,O,oBAAA,2GAAgCC,EAAhC,+BAAuC,EAAvC,kBAEoBC,IAAAA,IAAA,UAClBN,EADkB,oBACGF,EADH,iBACeO,EADf,iBAFpB,uBAEKE,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,iHAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,2HAAqD,EAArD,kBAEoBJ,IAAAA,IAAA,UAClBL,EADkB,oBACGH,EADH,kBACgBY,IAHpC,uBAEKH,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,iHASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,oBAAmCd,IAFvD,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gHAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,4BAA2Cd,IAF/D,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,EAAKO,MAHT,gHAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,4BAA2Cd,IAF/D,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,gH,0HCGP,UAtCa,WACX,IAAQI,GAAOI,EAAAA,EAAAA,MAAPJ,GACR,GAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAeD,GAAIS,MAAK,SAAAd,GACtBY,EAASZ,EACV,GACF,GAAE,CAACK,KAGF,SAAC,KAAD,WACIM,EAAMI,OAAS,GACf,SAAC,KAAD,wBAEA,SAAC,KAAD,UACGJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,aAA7B,OACT,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IACED,EACIxB,EAAAA,GAAewB,EACf,4EAENE,IAAKH,KAEP,UAAC,KAAD,YACE,uBAAIA,KACJ,wBACE,SAAC,IAAD,UAAWD,WAZFD,EADN,OAsBpB,C,mMC1CYM,EAAOC,EAAAA,EAAAA,GAAH,wHAQJC,EAAQD,EAAAA,EAAAA,IAAH,yCAILE,EAAWF,EAAAA,EAAAA,GAAH,yCAGRG,GAASH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,kEAINK,EAAML,EAAAA,EAAAA,OAAH,6hB,yLCpBHD,EAAOC,EAAAA,EAAAA,GAAH,iHAOJM,EAASN,EAAAA,EAAAA,GAAH,yCAGNO,EAAOP,EAAAA,EAAAA,EAAH,yCAGJQ,EAAWR,EAAAA,EAAAA,GAAH,0CAIRS,EAAaT,EAAAA,EAAAA,EAAH,8D,4NChBVU,EAAUV,EAAAA,EAAAA,IAAH,yFAMPC,EAAQD,EAAAA,EAAAA,IAAH,gEAKLW,EAAOX,EAAAA,EAAAA,IAAH,oFAMJY,EAAWZ,EAAAA,EAAAA,KAAH,0CAIRa,EAAQb,EAAAA,EAAAA,GAAH,0CAILc,GAAUd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,sjB","sources":["components/Api/api.js","components/Cast/Cast.jsx","components/Cast/CastStyled.jsx","components/Reviews/ReviewsStyled.jsx","components/TrendMoviesItem/movieDetailsStyled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '23b145ee574a18aa201c7296bc0e9b2b';\nconst DEFAULT_URL = 'https://api.themoviedb.org/3';\nconst BY_TRENDS = `${DEFAULT_URL}/trending/movie/week`;\nconst BY_SEARCH = `${DEFAULT_URL}/search/movie`;\nconst BY_ID = `${DEFAULT_URL}/movie/`;\nconst renderPoster = 'https://image.tmdb.org/t/p/w500';\nexport { renderPoster };\n\nexport async function fetchTrendMovies(page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_TRENDS}?api_key=${KEY}&page=${page}&language=en`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\n//Fetch by Search\nexport async function fetchBySearchMovies(formInput, page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_SEARCH}?api_key=${KEY}&query=${formInput}`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function fetchByID(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}?api_key=${KEY}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function fetchByCredits(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/credits?api_key=${KEY}`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function fetchByReviews(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/reviews?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {}\n}\n","import { Container } from 'components/SharedLayout/SharedLayoutStyled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchByCredits, renderPoster } from '../Api/api';\nimport { List, Image, ListItem } from './CastStyled';\nimport { Desc, TextWrap } from 'components/TrendMoviesItem/movieDetailsStyled';\nimport { TextName } from 'components/Reviews/ReviewsStyled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [casts, setCasts] = useState([]);\n  useEffect(() => {\n    fetchByCredits(id).then(data => {\n      setCasts(data);\n    });\n  }, [id]);\n\n  return (\n    <Container>\n      {!casts.length > 0 ? (\n        <TextName>No casts</TextName>\n      ) : (\n        <List>\n          {casts.map(({ cast_id, character, name, profile_path }) => (\n            <ListItem key={cast_id}>\n              <Image\n                src={\n                  profile_path\n                    ? renderPoster + profile_path\n                    : 'https://dummyimage.com/200x300/8c898c/ffffff.jpg&text=Photo+not+available'\n                }\n                alt={name}\n              />\n              <Desc>\n                <p>{name}</p>\n                <p>\n                  <TextWrap>{character}</TextWrap>\n                </p>\n              </Desc>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\nexport default Cast;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 20px;\n  padding-left: 25px;\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n`;\nexport const Linked = styled(Link)`\n  margin-left: 20px;\n  cursor: default;\n`;\nexport const Btn = styled.button`\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  cursor: pointer;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n  color: orange;\n  background: rgba(255, 255, 255, 0.45);\n  -webkit-backdrop-filter: blur(7px);\n  backdrop-filter: blur(7px);\n  border: 1px solid rgba(255, 255, 255, 0.225);\n  border-radius: 10px;\n  :hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 25px;\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n`;\n\nexport const Header = styled.h1`\n  color: white;\n`;\nexport const Text = styled.p`\n  color: white;\n`;\nexport const TextName = styled.h3`\n  color: orange;\n`;\n\nexport const RatingText = styled.p`\n  color: orange;\n  font-weight: 500;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-top: 25px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const Image = styled.img`\n  height: 540px;\n  margin-left: 20px;\n`;\n\nexport const Desc = styled.div`\n  margin-left: 20px;\n  color: white;\n  font-weight: 500;\n`;\n\nexport const TextWrap = styled.span`\n  color: orange;\n`;\n\nexport const Title = styled.h1`\n  color: orange;\n`;\n\nexport const BackBtn = styled(NavLink)`\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  width: 60px;\n  margin-left: 20px;\n  margin-top: 10px;\n  text-decoration: none;\n  text-align: center;\n  font-weight: 500;\n  color: orange;\n  background: rgba(255, 255, 255, 0.45);\n  -webkit-backdrop-filter: blur(7px);\n  backdrop-filter: blur(7px);\n  border: 1px solid rgba(255, 255, 255, 0.225);\n  border-radius: 10px;\n  &:hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n"],"names":["KEY","DEFAULT_URL","BY_TRENDS","BY_SEARCH","BY_ID","renderPoster","fetchTrendMovies","page","axios","data","results","fetchBySearchMovies","formInput","fetchByID","id","fetchByCredits","cast","fetchByReviews","useParams","useState","casts","setCasts","useEffect","then","length","map","cast_id","character","name","profile_path","src","alt","List","styled","Image","ListItem","Linked","Link","Btn","Header","Text","TextName","RatingText","Wrapper","Desc","TextWrap","Title","BackBtn","NavLink"],"sourceRoot":""}