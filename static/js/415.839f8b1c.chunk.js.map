{"version":3,"file":"static/js/415.839f8b1c.chunk.js","mappings":"oVAEMA,EAAM,mCACNC,EAAc,+BACdC,EAAS,UAAMD,EAAN,wBACTE,EAAS,UAAMF,EAAN,iBACTG,EAAK,UAAMH,EAAN,WACLI,EAAe,kCAGd,SAAeC,IAAtB,+B,aAAO,O,oBAAA,2GAAgCC,EAAhC,+BAAuC,EAAvC,kBAEoBC,IAAAA,IAAA,UAClBN,EADkB,oBACGF,EADH,iBACeO,EADf,iBAFpB,uBAEKE,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,iHAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,2HAAqD,EAArD,kBAEoBJ,IAAAA,IAAA,UAClBL,EADkB,oBACGH,EADH,kBACgBY,IAHpC,uBAEKH,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,iHASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,oBAAmCd,IAFvD,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gHAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,4BAA2Cd,IAF/D,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,EAAKO,MAHT,gHAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,4BAA2Cd,IAF/D,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,gH,4GCzCMQ,GAAQC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iDAILE,EAAOF,EAAAA,EAAAA,GAAH,4GAQJG,EAAWH,EAAAA,EAAAA,GAAH,mtBCZRI,EAAcJ,EAAAA,EAAAA,GAAH,oEAIXK,EAAQL,EAAAA,EAAAA,IAAH,wCAILM,EAASN,EAAAA,EAAAA,EAAH,0C,mBCLNO,EAAY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACzCC,EAASzB,EAAAA,GAAewB,EAI9B,OAHsB,OAAhBA,IACFC,EAAS,2DAGX,iCACE,SAACP,EAAD,UAAcI,KACd,SAACH,EAAD,CAAOO,IAAKD,EAAQE,IAAKL,KACzB,SAACF,EAAD,UAASG,EAAaK,QAAQ,OAGnC,E,UCXYC,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAChB,EAAD,UACGc,EAAOG,KAAI,gBAAGxB,EAAH,EAAGA,GAAIa,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,YAA5B,OACV,SAACP,EAAD,WACE,SAACJ,EAAD,CAAOqB,GAAE,iBAAYzB,GAAM0B,MAAO,CAAEC,KAAML,GAA1C,UACE,SAACV,EAAD,CACEC,MAAOA,EACPE,YAAaA,EACbD,aAAcA,OALLd,EADL,KAajB,C,4FCLD,UAbc,WACZ,OAA4B4B,EAAAA,EAAAA,WAAS,iBAAM,EAAN,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACRtC,EAAAA,EAAAA,MAAmBuC,MAAK,SAAApC,GACtBkC,GAAU,OAAIlC,GACf,GACF,GAAE,KAED,2BACE,SAAC,IAAD,CAAa0B,OAAQA,KAG1B,C","sources":["components/Api/api.js","components/TrendMovies/TrendMoviesStyled.jsx","components/TrendMoviesItem/TrendMoviesItemStyled.jsx","components/TrendMoviesItem/TrendMoviesItem.jsx","components/TrendMovies/TrendMovies.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '23b145ee574a18aa201c7296bc0e9b2b';\nconst DEFAULT_URL = 'https://api.themoviedb.org/3';\nconst BY_TRENDS = `${DEFAULT_URL}/trending/movie/week`;\nconst BY_SEARCH = `${DEFAULT_URL}/search/movie`;\nconst BY_ID = `${DEFAULT_URL}/movie/`;\nconst renderPoster = 'https://image.tmdb.org/t/p/w500';\nexport { renderPoster };\n\nexport async function fetchTrendMovies(page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_TRENDS}?api_key=${KEY}&page=${page}&language=en`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\n//Fetch by Search\nexport async function fetchBySearchMovies(formInput, page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_SEARCH}?api_key=${KEY}&query=${formInput}`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function fetchByID(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}?api_key=${KEY}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function fetchByCredits(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/credits?api_key=${KEY}`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function fetchByReviews(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/reviews?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {}\n}\n","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\nexport const Links = styled(Link)`\n  text-decoration:none;\n`\n\nexport const List = styled.ul`\nmargin-top:60px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\n\nexport const ListItem = styled.li`\n  width: 380px;\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  box-shadow: 7px 7px 34px -5px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 7px 7px 34px -5px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 7px 7px 34px -5px rgba(0, 0, 0, 0.75);\n  padding: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-right: 60px;\n  margin-bottom: 36px;\n  background: rgba(255, 255, 255, 0.178);\n  -webkit-backdrop-filter: blur(10px);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.075);\n  border-radius:20px;\n  &:hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;","import styled from '@emotion/styled';\n\nexport const MovieHeader = styled.h1`\n  text-decoration: none;\n  color: orange;\n`;\nexport const Image = styled.img`\n  width: 100%;\n`;\n\nexport const Rating = styled.p`\n  color: orange;\n`;\n","import React from 'react';\nimport { Image, MovieHeader, Rating } from './TrendMoviesItemStyled';\nimport PropTypes from 'prop-types';\nimport { renderPoster } from 'components/Api/api';\n\nexport const MovieItem = ({ title, vote_average, poster_path }) => {\n    let imgUrl = renderPoster + poster_path;\n    if (poster_path === null) {\n      imgUrl = 'https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg';\n    }\n  return (\n    <>\n      <MovieHeader>{title}</MovieHeader>\n      <Image src={imgUrl} alt={title} />\n      <Rating>{vote_average.toFixed(1)}</Rating>\n    </>\n  );\n};\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n};\n","import React from 'react';\nimport { List, ListItem, Links } from './TrendMoviesStyled';\nimport PropTypes from 'prop-types';\nimport { MovieItem } from 'components/TrendMoviesItem/TrendMoviesItem';\nimport { useLocation } from 'react-router-dom';\n\nexport const TrendMovies = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, vote_average, poster_path }) => (\n        <ListItem key={id}>\n          <Links to={`/movie/${id}`} state={{ from: location }}>\n            <MovieItem\n              title={title}\n              poster_path={poster_path}\n              vote_average={vote_average}\n            />\n          </Links>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nTrendMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { TrendMovies } from 'components/TrendMovies/TrendMovies';\nimport { fetchTrendMovies } from 'components/Api/api';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\n const Home = () => {\n  const [movies, setMovies] = useState(() => []);\n  useEffect(() => {\n    fetchTrendMovies().then(data => {\n      setMovies([...data]);\n    });\n  }, []);\n  return (\n    <main>\n      <TrendMovies movies={movies} />\n    </main>\n  );\n};\nexport default Home;"],"names":["KEY","DEFAULT_URL","BY_TRENDS","BY_SEARCH","BY_ID","renderPoster","fetchTrendMovies","page","axios","data","results","fetchBySearchMovies","formInput","fetchByID","id","fetchByCredits","cast","fetchByReviews","Links","styled","Link","List","ListItem","MovieHeader","Image","Rating","MovieItem","title","vote_average","poster_path","imgUrl","src","alt","toFixed","TrendMovies","movies","location","useLocation","map","to","state","from","useState","setMovies","useEffect","then"],"sourceRoot":""}