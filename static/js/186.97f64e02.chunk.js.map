{"version":3,"file":"static/js/186.97f64e02.chunk.js","mappings":"oVAEMA,EAAM,mCACNC,EAAc,+BACdC,EAAS,UAAMD,EAAN,wBACTE,EAAS,UAAMF,EAAN,iBACTG,EAAK,UAAMH,EAAN,WACLI,EAAe,kCAGd,SAAeC,IAAtB,+B,aAAO,O,oBAAA,2GAAgCC,EAAhC,+BAAuC,EAAvC,kBAEoBC,IAAAA,IAAA,UAClBN,EADkB,oBACGF,EADH,iBACeO,EADf,iBAFpB,uBAEKE,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,iHAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,2HAAqD,EAArD,kBAEoBJ,IAAAA,IAAA,UAClBL,EADkB,oBACGH,EADH,kBACgBY,IAHpC,uBAEKH,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,iHASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,oBAAmCd,IAFvD,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gHAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,4BAA2Cd,IAF/D,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,EAAKO,MAHT,gHAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,kGAEoBN,IAAAA,IAAA,UAAaJ,GAAb,OAAqBU,EAArB,4BAA2Cd,IAF/D,uBAEKS,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,gH,qGCOP,UA5CgB,WACd,IAAQI,GAAOI,EAAAA,EAAAA,MAAPJ,GACR,GAA8BK,EAAAA,EAAAA,WAAS,iBAAM,EAAN,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAeH,GAAIS,MAAK,SAAAd,GACtBY,EAAWZ,EACZ,GACF,GAAE,CAACK,KAGF,8BACsB,IAAnBM,EAAQI,QACP,SAAC,KAAD,0BAEA,UAAC,KAAD,YACE,SAAC,KAAD,4BACCJ,EAAQK,KACP,YAMO,IALLX,EAKI,EALJA,GACAY,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACkBC,EACd,EADJC,eAAkBD,OAElB,OACE,2BACE,UAAC,KAAD,uBAAoBH,MACpB,UAAC,KAAD,YACE,SAAC,IAAD,sBADF,IACgCC,MAEhC,UAAC,KAAD,sBAAqBE,GAAkB,UACvC,UAAC,KAAD,oBACS,IAAIE,KAAKH,GAAYI,mBAAmB,cAP1ClB,EAWZ,QAMZ,C,yLC9CYmB,EAAOC,EAAAA,EAAAA,GAAH,iHAOJC,EAASD,EAAAA,EAAAA,GAAH,yCAGNE,EAAOF,EAAAA,EAAAA,EAAH,yCAGJG,EAAWH,EAAAA,EAAAA,GAAH,0CAIRI,EAAaJ,EAAAA,EAAAA,EAAH,8D,sPChBVK,EAAYL,EAAAA,EAAAA,IAAH,oIASTM,EAAUN,EAAAA,EAAAA,IAAH,yFAMPO,EAAQP,EAAAA,EAAAA,IAAH,gEAKLQ,EAAOR,EAAAA,EAAAA,IAAH,oFAMJS,EAAWT,EAAAA,EAAAA,KAAH,0CAIRU,EAAQV,EAAAA,EAAAA,GAAH,0CAILW,GAAUX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAH,sjB","sources":["components/Api/api.js","components/Reviews/Reviews.jsx","components/Reviews/ReviewsStyled.jsx","components/TrendMoviesItem/movieDetailsStyled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '23b145ee574a18aa201c7296bc0e9b2b';\nconst DEFAULT_URL = 'https://api.themoviedb.org/3';\nconst BY_TRENDS = `${DEFAULT_URL}/trending/movie/week`;\nconst BY_SEARCH = `${DEFAULT_URL}/search/movie`;\nconst BY_ID = `${DEFAULT_URL}/movie/`;\nconst renderPoster = 'https://image.tmdb.org/t/p/w500';\nexport { renderPoster };\n\nexport async function fetchTrendMovies(page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_TRENDS}?api_key=${KEY}&page=${page}&language=en`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\n//Fetch by Search\nexport async function fetchBySearchMovies(formInput, page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_SEARCH}?api_key=${KEY}&query=${formInput}`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function fetchByID(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}?api_key=${KEY}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function fetchByCredits(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/credits?api_key=${KEY}`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function fetchByReviews(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/reviews?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {}\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchByReviews } from '../Api/api';\nimport { TextWrap } from 'components/TrendMoviesItem/movieDetailsStyled';\nimport { List, Header, TextName, Text, RatingText } from './ReviewsStyled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(() => []);\n  useEffect(() => {\n    fetchByReviews(id).then(data => {\n      setReviews(data);\n    });\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <TextName>No Reviews</TextName>\n      ) : (\n        <List>\n          <Header>Users Reviews</Header>\n          {reviews.map(\n            ({\n              id,\n              author,\n              content,\n              created_at,\n              author_details: { rating },\n            }) => {\n              return (\n                <li key={id}>\n                  <TextName> Author: {author}</TextName>\n                  <Text>\n                    <TextWrap>Review:</TextWrap> {content}\n                  </Text>\n                  <RatingText>Rating: {rating ? rating : 'N/A'}</RatingText>\n                  <RatingText>\n                    Date: {new Date(created_at).toLocaleDateString('en-US')}\n                  </RatingText>\n                </li>\n              );\n            }\n          )}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 25px;\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n`;\n\nexport const Header = styled.h1`\n  color: white;\n`;\nexport const Text = styled.p`\n  color: white;\n`;\nexport const TextName = styled.h3`\n  color: orange;\n`;\n\nexport const RatingText = styled.p`\n  color: orange;\n  font-weight: 500;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #012444;\n\n  width: 75%;\n  min-height: 100vh;\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 25px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const Image = styled.img`\n  height: 540px;\n  margin-left: 20px;\n`;\n\nexport const Desc = styled.div`\n  margin-left: 20px;\n  color: white;\n  font-weight: 500;\n`;\n\nexport const TextWrap = styled.span`\n  color: orange;\n`;\n\nexport const Title = styled.h1`\n  color: orange;\n`;\n\nexport const BackBtn = styled(NavLink)`\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  width: 60px;\n  margin-left: 20px;\n  margin-top: 10px;\n  text-decoration: none;\n  text-align: center;\n  font-weight: 500;\n  color: orange;\n  background: rgba(255, 255, 255, 0.45);\n  -webkit-backdrop-filter: blur(7px);\n  backdrop-filter: blur(7px);\n  border: 1px solid rgba(255, 255, 255, 0.225);\n  border-radius: 10px;\n  &:hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n"],"names":["KEY","DEFAULT_URL","BY_TRENDS","BY_SEARCH","BY_ID","renderPoster","fetchTrendMovies","page","axios","data","results","fetchBySearchMovies","formInput","fetchByID","id","fetchByCredits","cast","fetchByReviews","useParams","useState","reviews","setReviews","useEffect","then","length","map","author","content","created_at","rating","author_details","Date","toLocaleDateString","List","styled","Header","Text","TextName","RatingText","Container","Wrapper","Image","Desc","TextWrap","Title","BackBtn","NavLink"],"sourceRoot":""}