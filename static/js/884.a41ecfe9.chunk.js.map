{"version":3,"file":"static/js/884.a41ecfe9.chunk.js","mappings":"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","sources":["components/Api/api.js","components/Cast/CastStyled.jsx","components/TrendMoviesItem/movieDetailsStyled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '23b145ee574a18aa201c7296bc0e9b2b';\nconst DEFAULT_URL = 'https://api.themoviedb.org/3';\nconst BY_TRENDS = `${DEFAULT_URL}/trending/movie/week`;\nconst BY_SEARCH = `${DEFAULT_URL}/search/movie`;\nconst BY_ID = `${DEFAULT_URL}/movie/`;\nconst renderPoster = 'https://image.tmdb.org/t/p/w500';\nexport { renderPoster };\n\nexport async function fetchTrendMovies(page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_TRENDS}?api_key=${KEY}&page=${page}&language=en`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\n//Fetch by Search\nexport async function fetchBySearchMovies(formInput, page = 1) {\n  try {\n    const { data } = await axios.get(\n      `${BY_SEARCH}?api_key=${KEY}&query=${formInput}`\n    );\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function fetchByID(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}?api_key=${KEY}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function fetchByCredits(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/credits?api_key=${KEY}`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function fetchByReviews(id) {\n  try {\n    const { data } = await axios.get(`${BY_ID}${id}/reviews?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {}\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 20px;\n  padding-left: 25px;\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n`;\nexport const Linked = styled(Link)`\n  margin-left: 20px;\n  cursor: default;\n`;\nexport const Btn = styled.button`\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  cursor: pointer;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n  color: orange;\n  background: rgba(255, 255, 255, 0.45);\n  -webkit-backdrop-filter: blur(7px);\n  backdrop-filter: blur(7px);\n  border: 1px solid rgba(255, 255, 255, 0.225);\n  border-radius: 10px;\n  :hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-top: 25px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const Image = styled.img`\n  height: 540px;\n  margin-left: 20px;\n`;\n\nexport const Desc = styled.div`\n  margin-left: 20px;\n  color: white;\n  font-weight: 500;\n`;\n\nexport const TextWrap = styled.span`\n  color: orange;\n`;\n\nexport const Title = styled.h1`\n  color: orange;\n`;\n\nexport const BackBtn = styled(NavLink)`\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  width: 60px;\n  margin-left: 20px;\n  margin-top: 10px;\n  text-decoration: none;\n  text-align: center;\n  font-weight: 500;\n  color: orange;\n  background: rgba(255, 255, 255, 0.45);\n  -webkit-backdrop-filter: blur(7px);\n  backdrop-filter: blur(7px);\n  border: 1px solid rgba(255, 255, 255, 0.225);\n  border-radius: 10px;\n  &:hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Container } from 'components/SharedLayout/SharedLayoutStyled';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchByID } from '../components/Api/api';\nimport { renderPoster } from '../components/Api/api';\nimport {\n  Wrapper,\n  Image,\n  Desc,\n  TextWrap,\n  Title,\n  BackBtn,\n} from 'components/TrendMoviesItem/movieDetailsStyled';\nimport { Btn, Linked } from 'components/Cast/CastStyled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { id } = useParams();\n  const [movies, setMovies] = useState('');\n  useEffect(() => {\n    fetchByID(id).then(data => {\n      setMovies(data);\n    });\n  }, [id]);\n\n  let imgUrl = renderPoster + movies.poster_path;\n  if (movies.poster_path === null) {\n    imgUrl = 'https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg';\n  }\n  const { title, overview, genres, release_date, vote_average } = movies;\n\n  return (\n    <Container>\n      <BackBtn to={backLinkHref}>Back</BackBtn>\n      {movies && (\n        <section>\n          <Wrapper>\n            <Image src={imgUrl} alt={title} />\n            <Desc>\n              <Title>{title}</Title>\n              <p>{overview}</p>\n            </Desc>\n          </Wrapper>\n          <Desc>\n            <p>\n              <TextWrap>Genres: </TextWrap>\n              {genres.map(gen => gen.name).join(', ')}\n            </p>\n            <p>\n              <TextWrap>Release Date:</TextWrap> {release_date}\n            </p>\n            <p>\n              <TextWrap>Rating:</TextWrap> {vote_average.toFixed(1)}\n            </p>\n          </Desc>\n          <Linked to=\"cast\" state={{ from: backLinkHref }}>\n            <Btn>CAST</Btn>\n          </Linked>\n          <Linked to=\"reviews\" state={{ from: backLinkHref }}>\n            <Btn>Reviews</Btn>\n          </Linked>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </section>\n      )}\n    </Container>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","DEFAULT_URL","BY_TRENDS","BY_SEARCH","BY_ID","renderPoster","fetchTrendMovies","page","axios","data","results","fetchBySearchMovies","formInput","fetchByID","id","fetchByCredits","cast","fetchByReviews","List","styled","Image","ListItem","Linked","Link","Btn","Wrapper","Desc","TextWrap","Title","BackBtn","NavLink","backLinkHref","useLocation","state","from","useParams","useState","movies","setMovies","useEffect","then","imgUrl","poster_path","title","overview","genres","release_date","vote_average","to","src","alt","map","gen","name","join","toFixed","Suspense","fallback"],"sourceRoot":""}